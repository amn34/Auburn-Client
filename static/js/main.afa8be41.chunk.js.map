{"version":3,"sources":["components/Nav.js","components/Stat.js","components/MultiColorProgressBar.js","components/Header.js","components/Vaccination.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","useState","location","setLocation","parseLocation","a","potentialStateCity","split","potentialLocation","length","console","log","fetch","catch","requestDataForLocation","json","locationData","updateStats","Navbar","expand","Brand","Form","onSubmit","e","preventDefault","inline","style","navStyle","FormControl","onChange","target","value","id","type","placeholder","className","Button","onClick","variant","padding","Stat","stat","Card","border","Header","text","Body","Text","number","MultiColorProgressBar","parent","this","bars","readings","map","item","i","color","vulnLevel","legends","name","React","Component","title","Vaccination","href","rel","App","newCases","setNewCases","totalCases","setTotalCases","newDeaths","setNewDeaths","totalDeaths","setTotalDeaths","infectRate","setInfectRate","testRate","setTestRate","vaccAdmin","setAdminRate","vaccComplete","setCompleteRate","setVulnLevel","data","Math","min","useEffect","then","response","error","message","Helmet","charSet","content","CardDeck","range","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAIe,SAASA,EAAIC,GAAQ,IAAD,EAECC,mBAAS,IAFV,mBAExBC,EAFwB,KAEdC,EAFc,cAIhBC,EAJgB,8EAI/B,WAA6BF,GAA7B,qBAAAG,EAAA,6DAEUC,EAAqBJ,EAASK,MAAM,MACpB,iDAGhBC,EAAoBF,EAAmBG,OAAS,EAA5B,UAAmCH,EAAmB,GAAtD,YAA4DA,EAAmB,IAA/E,UAAyFA,EAAmB,IACtII,QAAQC,IAAIH,GAPhB,SAQyCI,MALf,iDAKqCJ,GAAmBK,OAAM,WAChFH,QAAQC,IAAI,+CATpB,cAQUG,EARV,gBAY+BA,EAAuBC,OAZtD,cAYUC,EAZV,OAaIhB,EAAMiB,YAAYD,GAClBN,QAAQC,IAAIK,GAdhB,kBAgBWA,GAhBX,6CAJ+B,sBAuB/B,OACI,eAACE,EAAA,EAAD,CAAQC,OAAO,KAAf,UACI,cAACD,EAAA,EAAOE,MAAR,4BACA,cAAC,IAAD,IACA,eAACC,EAAA,EAAD,CAAMC,SAAU,SAAUC,GAAKnB,EAAcF,GAAWqB,EAAEC,kBAAqBC,QAAM,EAACC,MAAOC,EAA7F,UACI,cAACC,EAAA,EAAD,CAAaN,SAAU,kBAAMlB,EAAcF,IAAW2B,SAAU,SAACN,GAAD,OAAOpB,EAAYoB,EAAEO,OAAOC,QAAQC,GAAG,WAAWC,KAAK,OAAOC,YAAY,sBAAsBC,UAAU,YAC1K,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMjC,EAAcF,IAAWoC,QAAQ,kBAAxD,0BAMhB,IAAMX,EAAW,CACbY,QAAS,U,QCrBEC,EAjBF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ,OAKI,cAJA,CAICC,EAAA,EAAD,CAAMC,OAAO,YAAb,UACI,cAACD,EAAA,EAAKE,OAAN,UAAcH,EAAKI,OACnB,cAACH,EAAA,EAAKI,KAAN,UACI,cAACJ,EAAA,EAAKK,KAAN,UACKN,EAAKO,e,gCC6BXC,G,kKApCX,WAEI,IAAMC,EAASC,KAAKnD,MAEhBoD,EAAOF,EAAOG,UAAYH,EAAOG,SAAS5C,QAAUyC,EAAOG,SAASC,KAAI,SAAUC,EAAMC,GACxF,OACI,qBAAKrB,UAAU,MAAMT,MAAO,CACxB,gBAAmB6B,EAAKE,MAAO,MAAS,IAAMP,EAAOG,SAAS5C,OAAS,IACvE,OAAU0C,KAAKnD,MAAM0D,YAAcF,EAAI,YAAc,OACjDA,KAGbL,MAECQ,EAAUT,EAAOG,UAAYH,EAAOG,SAAS5C,QAAUyC,EAAOG,SAASC,KAAI,SAAUC,EAAMC,GAC3F,OACI,sBAAKrB,UAAU,SAAST,MAAO,CAAE,QAAW,UAA5C,UACI,sBAAMS,UAAU,MAAMT,MAAO,CAAE,MAAS6B,EAAKE,OAA7C,oBACA,sBAAMtB,UAAU,QAAhB,SAAyBoB,EAAKK,SAF0BJ,KAKjEL,MAEH,OACI,sBAAKhB,UAAU,iBAAf,UACI,qBAAKA,UAAU,OAAf,SACc,KAATiB,EAAc,GAAKA,IAExB,qBAAKjB,UAAU,UAAf,SACiB,KAAZwB,EAAiB,GAAKA,W,GA/BPE,IAAMC,YCgC3BlB,EAjCA,SAAC5C,GAwBZ,OACI,yBAAQ0B,MAAO,CAAC,aAAc,QAA9B,UACI,6BAAK1B,EAAM+D,QACX,cAAC,EAAD,CAAuBV,SA1BhB,CACX,CACIO,KAAM,MACNH,MAAO,WAEX,CACIG,KAAM,SACNH,MAAO,WAEX,CACIG,KAAM,OACNH,MAAO,WAEX,CACIG,KAAM,YACNH,MAAO,WAEX,CACIG,KAAM,SACNH,MAAO,YAOoCC,UAAW1D,EAAM0D,YAC5D,yDClBGM,EAVY,WACvB,OACI,sBAAK7B,UAAU,OAAf,UACI,uDACA,cAACC,EAAA,EAAD,UAAQ,mBAAG6B,KAAK,mCAAmCnC,OAAO,SAASoC,IAAI,aACnExC,MAAO,CAAE+B,MAAO,SADZ,iC,gBC2ELU,MAzEf,WAAgB,IAAD,EACmBlE,mBAAS,GAD5B,mBACNmE,EADM,KACIC,EADJ,OAGuBpE,mBAAS,GAHhC,mBAGNqE,EAHM,KAGMC,EAHN,OAIqBtE,mBAAS,GAJ9B,mBAINuE,EAJM,KAIKC,EAJL,OAMyBxE,mBAAS,GANlC,mBAMNyE,EANM,KAMOC,EANP,OAOuB1E,mBAAS,GAPhC,mBAON2E,EAPM,KAOMC,EAPN,OASmB5E,mBAAS,GAT5B,mBASN6E,EATM,KASIC,EATJ,OAWqB9E,mBAAS,GAX9B,mBAWN+E,EAXM,KAWKC,EAXL,OAY2BhF,mBAAS,GAZpC,mBAYNiF,EAZM,KAYQC,EAZR,OAaqBlF,mBAAS,GAb9B,mBAaNyD,EAbM,KAaK0B,EAbL,OAcmBnF,mBAAS,mBAd5B,mBAcNC,EAdM,KAcIC,EAdJ,KAgBb,SAASc,EAAYoE,GACnBhB,EAAYgB,EAAK,cACjBd,EAAcc,EAAK,cACnBZ,EAAaY,EAAK,eAClBV,EAAeU,EAAK,eACpBR,EAAcQ,EAAK,mBACnBN,EAAyC,IAA7BM,EAAK,uBACjBJ,EAAaI,EAAK,0BAA4B,OAC9CF,EAAgBE,EAAK,uBACrBD,EAAaE,KAAKC,IAAI,EAAGF,EAAK,yBAC9BlF,EAAYkF,EAAI,UAgBlB,OAbAG,qBAAU,WACR5E,MAAM,2DACH6E,MAAK,SAACC,GACLA,EAAS3E,OAAO0E,MAAK,SAACJ,GACpB3E,QAAQC,IAAI0E,GACZpE,EAAYoE,SAGfxE,OAAM,SAAC8E,GACNjF,QAAQC,IAAIgF,EAAMC,cAErB,IAGD,sBAAKzD,UAAU,MAAf,UAEE,eAAC0D,EAAA,EAAD,WACE,sBAAMC,QAAQ,UACd,iEACA,sBAAM5B,IAAI,YAAYD,KAAK,8BAC3B,sBAAML,KAAK,cAAcmC,QAAQ,yFAGnC,cAAChG,EAAD,CAAKkB,YAAaA,IAClB,sBAAKkB,UAAU,YAAf,UACE,cAAC,EAAD,CAAQ4B,MAAO7D,EAAUwD,UAAWA,IACpC,eAACsC,EAAA,EAAD,CAAU7D,UAAU,OAApB,UACE,cAAC,EAAD,CAAMM,KAAM,CAAEI,KAAM,kBAAmBG,OAAQoB,EAAW,YAAa6B,MAtD7D,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,IAAK,CAAC,GAAI,SAuDrD,cAAC,EAAD,CAAMxD,KAAM,CAAEI,KAAM,cAAeG,OAAQsB,KAC3C,cAAC,EAAD,CAAM7B,KAAM,CAAEI,KAAM,mBAAoBG,OAAQwB,KAChD,cAAC,EAAD,CAAM/B,KAAM,CAAEI,KAAM,eAAgBG,OAAQ0B,QAE9C,eAACsB,EAAA,EAAD,CAAU7D,UAAU,OAApB,UACE,cAAC,EAAD,CAAMM,KAAM,CAAEI,KAAM,iBAAkBG,OAAQ4B,EAAWsB,QAAQ,MACjE,cAAC,EAAD,CAAMzD,KAAM,CAAEI,KAAM,qBAAsBG,OAAQ8B,EAASoB,QAAQ,GAAK,OACxE,cAAC,EAAD,CAAMzD,KAAM,CAAEI,KAAM,wBAAyBG,OAAQgC,KACrD,cAAC,EAAD,CAAMvC,KAAM,CAAEI,KAAM,qBAAsBG,OAAQkC,QAEpD,cAAC,EAAD,WC/DOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.afa8be41.chunk.js","sourcesContent":["import { Navbar, Form, Button, FormControl } from 'react-bootstrap'\r\nimport { FaSearch } from 'react-icons/fa'\r\nimport { useState } from \"react\"\r\n\r\nexport default function Nav(props) {\r\n\r\n    const [location, setLocation] = useState(\"\")\r\n\r\n    async function parseLocation(location) {\r\n        // String split by city and state\r\n        const potentialStateCity = location.split(\", \")\r\n        const covidStatsApi = 'https://fabled-decker-310400.wl.r.appspot.com/'\r\n\r\n        // // state // state/city\r\n        const potentialLocation = potentialStateCity.length > 1 ? `${potentialStateCity[1]}/${potentialStateCity[0]}` : `${potentialStateCity[0]}`\r\n        console.log(potentialLocation)\r\n        const requestDataForLocation = await fetch(covidStatsApi + potentialLocation).catch(function () {\r\n            console.log(\"One of the locations seems to be invalid\")\r\n        })\r\n\r\n        const locationData = await requestDataForLocation.json()\r\n        props.updateStats(locationData)\r\n        console.log(locationData)\r\n\r\n        return locationData\r\n    }\r\n\r\n    return (\r\n        <Navbar expand=\"lg\">\r\n            <Navbar.Brand>Healthy State</Navbar.Brand>\r\n            <FaSearch />\r\n            <Form onSubmit={function (e) { parseLocation(location); e.preventDefault(); }} inline style={navStyle}>\r\n                <FormControl onSubmit={() => parseLocation(location)} onChange={(e) => setLocation(e.target.value)} id=\"location\" type=\"text\" placeholder=\"Enter a city, state\" className=\"mr-sm-2\" />\r\n                <Button onClick={() => parseLocation(location)} variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst navStyle = {\r\n    padding: '0 10px'\r\n}\r\n\r\n\r\n\r\n","import { Card } from 'react-bootstrap'\r\n\r\nconst Stat = ({ stat }) => {\r\n    return (\r\n        // <div className='col'>\r\n        //     <b><p><span className=\"dot\" style={{ 'color': 'black' }}>●</span> {stat.text}</p></b>\r\n        //     <p>{stat.number}</p>\r\n        // </div>\r\n        <Card border='secondary'>\r\n            <Card.Header>{stat.text}</Card.Header>\r\n            <Card.Body>\r\n                <Card.Text>\r\n                    {stat.number}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Stat","import React from 'react'\r\nimport '../bar.css'\r\n\r\nclass MultiColorProgressBar extends React.Component {\r\n\r\n    render() {\r\n\r\n        const parent = this.props;\r\n\r\n        let bars = parent.readings && parent.readings.length && parent.readings.map(function (item, i) {\r\n            return (\r\n                <div className=\"bar\" style={{\r\n                    'backgroundColor': item.color, 'width': 100 / parent.readings.length + '%',\r\n                    'border': this.props.vulnLevel === i ? '4px solid' : null\r\n                }} key={i} >\r\n                </div>\r\n            )\r\n        }, this);\r\n\r\n        let legends = parent.readings && parent.readings.length && parent.readings.map(function (item, i) {\r\n            return (\r\n                <div className=\"legend\" style={{ 'padding': '0 20px' }}key={i}>\r\n                    <span className=\"dot\" style={{ 'color': item.color }}>●</span>\r\n                    <span className=\"label\">{item.name}</span>\r\n                </div>\r\n            )\r\n        }, this);\r\n\r\n        return (\r\n            <div className=\"multicolor-bar\">\r\n                <div className=\"bars\">\r\n                    {bars === '' ? '' : bars}\r\n                </div>\r\n                <div className=\"legends\">\r\n                    {legends === '' ? '' : legends}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiColorProgressBar","import MultiColorProgressBar from './MultiColorProgressBar'\r\n\r\nconst Header = (props) => {\r\n    let readings = [\r\n        {\r\n            name: 'Low',\r\n            color: '#38ba6e'\r\n        },\r\n        {\r\n            name: 'Medium',\r\n            color: '#ebe22f'\r\n        },\r\n        {\r\n            name: 'High',\r\n            color: '#eba32f'\r\n        },\r\n        {\r\n            name: 'Very high',\r\n            color: '#c91212'\r\n        },\r\n        {\r\n            name: 'Severe',\r\n            color: '#820a0a'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <header style={{'margin-top': '50px'}}>\r\n            <h1>{props.title}</h1>\r\n            <MultiColorProgressBar readings={readings} vulnLevel={props.vulnLevel} />\r\n            <small>COVID Risk Level</small>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { Button } from 'react-bootstrap'\r\n\r\nexport const Vaccination = () => {\r\n    return (\r\n        <div className=\"mt-5\">\r\n            <h5>Get vaccinated today!</h5>\r\n            <Button><a href=\"https://vaccinefinder.org/search\" target=\"_blank\" rel=\"noreferrer\"\r\n                style={{ color: \"white\" }}>VaccineFinder</a></Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Vaccination","import { useState, useEffect } from \"react\";\r\nimport Nav from \"./components/Nav\";\r\nimport Stat from \"./components/Stat\";\r\nimport Header from \"./components/Header\";\r\nimport Vaccination from \"./components/Vaccination\"\r\nimport { CardDeck } from 'react-bootstrap'\r\nimport { Helmet } from \"react-helmet\"\r\n\r\nfunction App() {\r\n  const [newCases, setNewCases] = useState(0);\r\n  const caseRange = [[0, 1], [1, 10], [10, 25], [25, 45], [45, 100000]]\r\n  const [totalCases, setTotalCases] = useState(0);\r\n  const [newDeaths, setNewDeaths] = useState(0);\r\n  //const deathRange = [[0, 0], []]\r\n  const [totalDeaths, setTotalDeaths] = useState(0);\r\n  const [infectRate, setInfectRate] = useState(0);\r\n  //const infectRange = [[0, 0.9], [0.9, 1.1], [1.1, 1.4], [1.4, 2.2], [2.2, 10000]]\r\n  const [testRate, setTestRate] = useState(0);\r\n  //const testRange = [[0, 3], [3, 10], [10, 20], [20, 33], [33, 100]]\r\n  const [vaccAdmin, setAdminRate] = useState(0);\r\n  const [vaccComplete, setCompleteRate] = useState(0);\r\n  const [vulnLevel, setVulnLevel] = useState(0);\r\n  const [location, setLocation] = useState(\"Auburn, Alabama\")\r\n\r\n  function updateStats(data) {\r\n    setNewCases(data[\"new-cases\"]);\r\n    setTotalCases(data[\"tot-cases\"]);\r\n    setNewDeaths(data[\"new-deaths\"]);\r\n    setTotalDeaths(data[\"tot-deaths\"]);\r\n    setInfectRate(data[\"infection-rate\"]);\r\n    setTestRate(data[\"positive-test-rate\"] * 100);\r\n    setAdminRate(data[\"vaccines-administered\"] || \"N/A\");\r\n    setCompleteRate(data[\"vaccines-completed\"]);\r\n    setVulnLevel(Math.min(4, data[\"vulnerability-level\"]));\r\n    setLocation(data[\"location\"]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://fabled-decker-310400.wl.r.appspot.com/al/auburn\")\r\n      .then((response) => {\r\n        response.json().then((data) => {\r\n          console.log(data)\r\n          updateStats(data)\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Healthy State Covid-19 Stats</title>\r\n        <link rel=\"canonical\" href=\"http://healthystate.tech/\" />\r\n        <meta name=\"description\" content=\"Make informed decisions by tracking the spread of Covid19 in your city and state.\"/>\r\n      </Helmet>\r\n\r\n      <Nav updateStats={updateStats} />\r\n      <div className=\"container\">\r\n        <Header title={location} vulnLevel={vulnLevel} />\r\n        <CardDeck className=\"mt-5\">\r\n          <Stat stat={{ text: \"Daily new cases\", number: newCases + ' per 100k', range: caseRange }} />\r\n          <Stat stat={{ text: \"Total cases\", number: totalCases }} />\r\n          <Stat stat={{ text: \"Daily new deaths\", number: newDeaths }} />\r\n          <Stat stat={{ text: \"Total deaths\", number: totalDeaths }} />\r\n        </CardDeck>\r\n        <CardDeck className=\"mt-4\">\r\n          <Stat stat={{ text: \"Infection rate\", number: infectRate.toFixed(1) }} />\r\n          <Stat stat={{ text: \"Positive test rate\", number: testRate.toFixed(1) + '%' }} />\r\n          <Stat stat={{ text: \"Vaccines administered\", number: vaccAdmin }} />\r\n          <Stat stat={{ text: \"Vaccines completed\", number: vaccComplete }} />\r\n        </CardDeck>\r\n        <Vaccination />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}