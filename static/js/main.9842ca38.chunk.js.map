{"version":3,"sources":["components/Nav.js","components/Stat.js","components/MultiColorProgressBar.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["navStyle","padding","parseLocation","location","a","potentialStateCity","split","potentialLocation","length","fetch","catch","console","log","requestDataForLocation","json","locationData","Nav","setLocation","Navbar","expand","Brand","Form","onSubmit","e","preventDefault","inline","style","FormControl","onChange","target","value","id","type","placeholder","className","Button","onClick","variant","Stat","stat","text","number","MultiColorProgressBar","props","parent","this","bars","readings","map","item","i","color","vulnLevel","legends","name","React","Component","Header","title","App","useState","newCases","setNewCases","totalCases","setTotalCases","newDeaths","setNewDeaths","totalDeaths","setTotalDeaths","infectRate","setInfectRate","testRate","setTestRate","vaccAdmin","setAdminRate","vaccComplete","setCompleteRate","setVulnLevel","useEffect","then","response","data","error","message","class","toFixed","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9842ca38.chunk.js","sourcesContent":["import { Navbar, Form, Button, FormControl } from 'react-bootstrap'\r\nimport { FaSearch } from 'react-icons/fa'\r\n\r\nconst Nav = ({location=\"AL\", setLocation}) => {\r\n    return (\r\n        <Navbar expand=\"lg\">\r\n            <Navbar.Brand>COVID Stats</Navbar.Brand>\r\n            <FaSearch />\r\n            <Form onSubmit={function(e) {parseLocation(location); e.preventDefault();}} inline style={navStyle}>\r\n                <FormControl onSubmit={() => parseLocation(location)} onChange={(e) => location = e.target.value} id=\"location\" type=\"text\" placeholder=\"Type a city/state\" className=\"mr-sm-2\" />\r\n                <Button onClick={() => parseLocation(location)} variant=\"outline-success\">Search</Button>\r\n            </Form>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst navStyle = {\r\n    padding: '0 10px'\r\n}\r\n\r\nasync function parseLocation(location) {\r\n    // String split by city and state\r\n    const potentialStateCity = location.split(\", \")\r\n    const covidStatsApi = 'https://fabled-decker-310400.wl.r.appspot.com/'\r\n\r\n    // // state // state/city\r\n    const potentialLocation = potentialStateCity.length > 1 ? `${potentialStateCity[1]}/${potentialStateCity[0]}` : `${potentialStateCity[0]}`\r\n    const requestDataForLocation = await fetch(covidStatsApi+potentialLocation).catch(function() {\r\n        console.log(\"One of the locations seems to be invalid\")\r\n    })\r\n\r\n    const locationData = await requestDataForLocation.json()\r\n\r\n    console.log(locationData)\r\n\r\n    return locationData\r\n}\r\n\r\nexport default Nav\r\n","const Stat = ({ stat }) => {\r\n    return (\r\n        <div className='col'>\r\n            <h4>{stat.text}</h4>\r\n            <p>{stat.number}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stat","import React from 'react'\r\nimport '../bar.css'\r\n\r\nclass MultiColorProgressBar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n\r\n        const parent = this.props;\r\n\r\n        let bars = parent.readings && parent.readings.length && parent.readings.map(function (item, i) {\r\n            return (\r\n                <div className=\"bar\" style={{\r\n                    'backgroundColor': item.color, 'width': 20 + '%',\r\n                    'border': this.props.vulnLevel === i ? '4px solid' : null\r\n                }} key={i} >\r\n                </div>\r\n            )\r\n        }, this);\r\n\r\n        let legends = parent.readings && parent.readings.length && parent.readings.map(function (item, i) {\r\n            return (\r\n                <div className=\"legend\" key={i}>\r\n                    <span className=\"dot\" style={{ 'color': item.color }}>‚óè</span>\r\n                    <span className=\"label\">{item.name}</span>\r\n                </div>\r\n            )\r\n        }, this);\r\n\r\n        return (\r\n            <div className=\"multicolor-bar\">\r\n                <div className=\"bars\">\r\n                    {bars === '' ? '' : bars}\r\n                </div>\r\n                <div className=\"legends\">\r\n                    {legends === '' ? '' : legends}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiColorProgressBar","import MultiColorProgressBar from './MultiColorProgressBar'\r\n\r\nconst Header = (props) => {\r\n    let readings = [\r\n        {\r\n            name: 'Low',\r\n            color: '#38ba6e'\r\n        },\r\n        {\r\n            name: 'Medium',\r\n            color: '#ebe22f'\r\n        },\r\n        {\r\n            name: 'High',\r\n            color: '#eba32f'\r\n        },\r\n        {\r\n            name: 'Very high',\r\n            color: '#c91212'\r\n        },\r\n        {\r\n            name: 'Severe',\r\n            color: '#820a0a'\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <header>\r\n            <h1>{props.title}</h1>\r\n            <p>COVID Risk Level</p>\r\n            <MultiColorProgressBar readings={readings} vulnLevel={props.vulnLevel} />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import { useState, useEffect } from \"react\";\r\nimport Nav from \"./components/Nav\";\r\nimport Stat from \"./components/Stat\";\r\nimport Header from \"./components/Header\";\r\n\r\nfunction App() {\r\n  const [newCases, setNewCases] = useState(0);\r\n  const [totalCases, setTotalCases] = useState(0);\r\n  const [newDeaths, setNewDeaths] = useState(0);\r\n  const [totalDeaths, setTotalDeaths] = useState(0);\r\n  const [infectRate, setInfectRate] = useState(0);\r\n  const [testRate, setTestRate] = useState(0);\r\n  const [vaccAdmin, setAdminRate] = useState(0);\r\n  const [vaccComplete, setCompleteRate] = useState(0);\r\n  const [vulnLevel, setVulnLevel] = useState(0);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://fabled-decker-310400.wl.r.appspot.com/wa\")\r\n      .then((response) => {\r\n        response.json().then((data) => {\r\n          console.log(data);\r\n          setNewCases(data[\"new-cases\"]);\r\n          setTotalCases(data[\"tot-cases\"]);\r\n          setNewDeaths(data[\"new-deaths\"]);\r\n          setTotalDeaths(data[\"tot-deaths\"]);\r\n          setInfectRate(data[\"infection-rate\"]);\r\n          setTestRate(data[\"positive-test-rate\"] * 100);\r\n          setAdminRate(data[\"vaccines-administered\"]);\r\n          setCompleteRate(data[\"vaccines-completed\"]);\r\n          setVulnLevel(data[\"vulnerability-level\"]);\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.message);\r\n      });\r\n  })\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <div className=\"container\">\r\n        <Header title=\"Tacoma, WA\" vulnLevel={vulnLevel} />\r\n        <div class=\"row\">\r\n          <Stat stat={{ text: \"Daily new Cases\", number: newCases }} />\r\n          <Stat stat={{ text: \"Total cases\", number: totalCases }} />\r\n          <Stat stat={{ text: \"Daily new deaths\", number: newDeaths }} />\r\n          <Stat stat={{ text: \"Total deaths\", number: totalDeaths }} />\r\n        </div>\r\n        <div class=\"row\">\r\n          <Stat stat={{ text: \"Infection rate\", number: infectRate.toFixed(1) }} />\r\n          <Stat stat={{ text: \"Positive test rate\", number: testRate.toFixed(1) }} />\r\n          <Stat stat={{ text: \"Vaccines administered\", number: vaccAdmin }} />\r\n          <Stat stat={{ text: \"Vaccines completed\", number: vaccComplete }} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}